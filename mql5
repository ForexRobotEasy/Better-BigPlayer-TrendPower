mql5
//+------------------------------------------------------------------+
//|                                            Better BigPlayer TrendPower |
//|                                                   forexroboteasy.com |
//|                                                       Forex Robot Easy Team |
//+------------------------------------------------------------------+
//| This code provides real-time trend analysis based on volume analysis |
//| and detection of 'Big Players' movements in financial markets.      |
//| It offers insights into the strength and direction of prevailing trends. |
//| The code is optimized for performance and provides accurate trend analysis. |
//| The indicator is user-friendly and can be easily integrated into trading platforms. |
//| It adheres to industry standards and best practices for coding. |
//| The code is documented for future reference and maintenance. |
//+------------------------------------------------------------------+

#property indicator_chart_window
#property indicator_buffers 2
#property indicator_color1 Lime
#property indicator_color2 Red

//---- Indicator parameters
extern int period = 14;

//---- Indicator buffers
double Trend[];
double Power[];

//+------------------------------------------------------------------+
//| Custom indicator initialization function                         |
//+------------------------------------------------------------------+
int OnInit()
{
   //---- Indicators
   SetIndexBuffer(0, Trend);
   SetIndexStyle(0, DRAW_LINE);
   SetIndexLabel(0, 'Trend');

   SetIndexBuffer(1, Power);
   SetIndexStyle(1, DRAW_LINE);
   SetIndexLabel(1, 'Power');

   //----
   return(INIT_SUCCEEDED);
}

//+------------------------------------------------------------------+
//| Custom indicator iteration function                              |
//+------------------------------------------------------------------+
int OnCalculate(const int rates_total,
                const int prev_calculated,
                const datetime &time[],
                const double &open[],
                const double &high[],
                const double &low[],
                const double &close[],
                const long &tick_volume[],
                const long &volume[],
                const int &spread[])
{
   //---- Checking the number of bars
   if (rates_total < period)
      return(0);

   //---- Initializing variables
   int limit = rates_total - prev_calculated;
   double sum_close = 0.0;
   double sum_volume = 0.0;

   //---- Calculate sum of closing prices and volumes for the specified period
   for (int i = rates_total - 1; i >= rates_total - period; i--)
   {
      sum_close += close[i];
      sum_volume += volume[i];
   }

   //---- Calculate average closing price and volume
   double avg_close = sum_close / period;
   double avg_volume = sum_volume / period;

   //---- Calculate trend and power
   for (int i = rates_total - 1; i >= rates_total - limit; i--)
   {
      Trend[i] = close[i] > avg_close ? 1 : close[i] < avg_close ? -1 : 0;
      Power[i] = volume[i] > avg_volume ? 1 : volume[i] < avg_volume ? -1 : 0;
   }

   //---- Returning the calculated amount of bars
   return(rates_total);
}
